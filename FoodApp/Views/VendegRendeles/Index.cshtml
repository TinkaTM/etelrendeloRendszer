@model IEnumerable<FoodApp.ViewModels.VendegRendelesViewModel>

@{
    ViewData["Title"] = "Rendelések";
}
@{
    FoodApp.ViewModels.VendegRendelesViewModel model1 = new FoodApp.ViewModels.VendegRendelesViewModel();
}

@{model1.SegedValtozo = 0; }
@foreach (var rendeles in Model)
{
    model1.SegedValtozo++;
    <div class="card">
        <div class="card-header">
            <h5>@rendeles.RendelesAdatok.VezetekNev @rendeles.RendelesAdatok.KeresztNev</h5> <small>@rendeles.RendelesAdatok.RendelesIdo</small>
        </div>
        <div class="card-body">
            <div class="list-group">
                @{int v = 0; }
                @foreach (var allapot in rendeles.RendelesEtelek)
                {
                    { v++; }
                    <div class="d-flex justify-content-between">
                        <h5>@allapot.Key.Etterem.EtteremNev</h5>
                        @{
                            switch ((int)allapot.Key.RenStatus)
                            {
                                case 0:
                                    <text>
                                        <small>A rendelése feldolgozás alatt áll. Kérjük, várjon.</small>
                                    </text>
                                    break;
                                case 1:
                                    <text>

                                        <small>Rendelését sikeresen feldolgoztuk. Várható elkészülési idő: @allapot.Key.CompletionTime.ToString("dd/MM/yyyy HH:mm:ss")</small>
                                        <small id=@v></small>
                                        <script type="text/javascript">
                                            var date = "@allapot.Key.CompletionTime.ToString("yyyy-MM-ddTHH:mm:ssZ")";
                                            var id = @v;
                                            var a = new Date(date);
                                            var countDownDate = a.getTime();
                                            timer(countDownDate, id);
                                        </script>
                                    </text>
                                    break;
                                case 2:
                                    <text>
                                        <small>Rendelése sajnos elutasításra került. Elnézést kérünk a kellemetlenségért.</small>
                                    </text>
                                    break;

                            }
                        }
                    </div>
                    @foreach (var etel in allapot.Value)
                    {
                        <div class="d-flex justify-content-between">
                            <p>@etel.Etlap.Nev x @etel.Darab</p> <small>@{int total = etel.Darab * etel.Etlap.Ar;} @total Ft </small>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="card-footer">
            <p class="card-text">Összesen: @rendeles.RendelesTotal Ft</p>
        </div>
    </div>
    <br>
}
@{
    if (model1.SegedValtozo == 0)
    {
        <div class="card">
            <div class="card-header">
                <h5>Jelenleg nincs egy rendelése sem.</h5>
            </div>
        </div>
        <br>
    }
}

