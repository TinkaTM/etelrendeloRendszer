@model IEnumerable<FoodApp.ViewModels.VendegRendelesViewModel>

@{
    ViewData["Title"] = "Rendelések";
}
@{
    FoodApp.ViewModels.VendegRendelesViewModel model1 = new FoodApp.ViewModels.VendegRendelesViewModel();
}

@{model1.SegedValtozo = 0; }
@foreach (var rendeles in Model)
{
    model1.SegedValtozo++;
    <div class="card">
        <div class="card-header">
            <h5>@rendeles.RendelesAdatok.VezetekNev @rendeles.RendelesAdatok.KeresztNev</h5> <small>Rendelés ideje: @rendeles.RendelesAdatok.RendelesIdo</small>
        </div>
        <div class="card-body">
            <div class="list-group">
                @{int v = 0; }
                @foreach (var allapot in rendeles.RendelesEtelek)
                {
                    { v++; }
                <div class="d-flex justify-content-between">
                    <h5>@allapot.Key.Etterem.EtteremNev</h5>
                    @{
                        switch ((int)allapot.Key.RenStatus)
                        {
                            case 0:
                                <text>
                                    <p>A rendelése feldolgozás alatt áll. Kérjük, várjon.</p>
                                </text>
                                break;
                            case 1:
                                <text>
                                    <p>Rendelését sikeresen feldolgoztuk.<br /> Várható elkészülési idő: <strong>@allapot.Key.CompletionTime.ToString("yyyy/MM/dd/ HH:mm:ss")</strong><br /></p>
                                </text>
                                break;
                            case 2:
                                <text>
                                    <p>Rendelése sajnos elutasításra került. Elnézést kérünk a kellemetlenségért.</p>
                                </text>
                                break;
                            case 3:
                                <text>
                                    <p>Rendelése elkészült, egy futárra vár, hogy felvegye.</p>
                                </text>
                                break;
                            case 4:
                                <text>
                                    <p>A rendelése úton van Önhöz. <br />  Várható érkezési idő: <strong>@allapot.Key.CompletionTime.ToString("yyyy/MM/dd/ HH:mm:ss")</strong><br /></p>
                                </text>
                                break;
                            case 5:
                                <text>
                                    <p>Rendelése teljesítve.</p>
                                </text>
                                break;
                            case 7:
                                <text>
                                    <p>Rendelése egy új futárra vár.</p>
                                </text>
                                break;
                            case 6:
                                <text>
                                    <p>Az Elviteles rendelése feldolgozás alatt áll. Kérjük, várjon.</p>
                                </text>
                                break;
                            case 8:
                                <text>
                                    <p>Az Elviteles Rendelését sikeresen feldolgoztuk.<br /> Várható elkészülési idő: <strong>@allapot.Key.CompletionTime.ToString("yyyy/MM/dd/ HH:mm:ss")</strong><br /></p>
                                </text>
                                break;
                            case 9:
                                <text>
                                    <p>Az Elviteles rendelése elkészült, kérjük vegy át az éttermünkben.<br />
                                        (Címünk: @allapot.Key.Etterem.Varos @allapot.Key.Etterem.Cim)
                                    </p>
                                </text>
                                break;
                        }
                    }
                </div>
                    @foreach (var etel in allapot.Value)
                    {
                        <div class="d-flex justify-content-between">
                            <p>@etel.Etlap.Nev x @etel.Darab</p> <p>@{int total = etel.Darab * etel.Etlap.Ar;} @total Ft </p>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="card-footer">
            <p class="card-text">Összesen:<strong> @rendeles.RendelesTotal Ft</strong></p>
        </div>
    </div>
    <br>
}
@{
    if (model1.SegedValtozo == 0)
    {
        <div class="card">
            <div class="card-header">
                <h5>Jelenleg nincs egy rendelése sem.</h5>
            </div>
        </div>
        <br>
    }
}

